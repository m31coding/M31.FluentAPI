// <auto-generated/>
// This code was generated by the library M31.FluentAPI.
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.

#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
#nullable enable

using System.Collections.Generic;
using M31.FluentApi.Attributes;

namespace M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.CustomFluentMethodNameClass;

public class CreateStudent :
    CreateStudent.ICreateStudent,
    CreateStudent.IWithName,
    CreateStudent.IWhoIsHappy,
    CreateStudent.IInSemester,
    CreateStudent.IWhoseFriendsAre
{
    private readonly Student student;

    private CreateStudent()
    {
        student = new Student();
    }

    public static ICreateStudent InitialStep()
    {
        return new CreateStudent();
    }

    public static IWhoIsHappy WithName(string firstName, string lastName)
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.SetNameFromFirstNameAndLastName(firstName, lastName);
        return createStudent;
    }

    IWhoIsHappy IWithName.WithName(string firstName, string lastName)
    {
        student.SetNameFromFirstNameAndLastName(firstName, lastName);
        return this;
    }

    IInSemester IWhoIsHappy.WhoIsHappy(bool isHappy)
    {
        student.IsHappy = isHappy;
        return this;
    }

    IInSemester IWhoIsHappy.WhoIsSad()
    {
        student.IsHappy = false;
        return this;
    }

    IWhoseFriendsAre IInSemester.InSemester(int semester)
    {
        student.Semester = semester;
        return this;
    }

    Student IWhoseFriendsAre.WhoseFriendsAre(System.Collections.Generic.IReadOnlyCollection<string> friends)
    {
        student.Friends = friends;
        return student;
    }

    Student IWhoseFriendsAre.WhoseFriendsAre(params string[] friends)
    {
        student.Friends = friends;
        return student;
    }

    Student IWhoseFriendsAre.WhoseFriendIs(string friend)
    {
        student.Friends = new string[1]{ friend };
        return student;
    }

    Student IWhoseFriendsAre.WhoHasNoFriends()
    {
        student.Friends = new string[0];
        return student;
    }

    public interface ICreateStudent : IWithName
    {
    }

    public interface IWithName
    {
        IWhoIsHappy WithName(string firstName, string lastName);
    }

    public interface IWhoIsHappy
    {
        IInSemester WhoIsHappy(bool isHappy = true);

        IInSemester WhoIsSad();
    }

    public interface IInSemester
    {
        IWhoseFriendsAre InSemester(int semester);
    }

    public interface IWhoseFriendsAre
    {
        Student WhoseFriendsAre(System.Collections.Generic.IReadOnlyCollection<string> friends);

        Student WhoseFriendsAre(params string[] friends);

        Student WhoseFriendIs(string friend);

        Student WhoHasNoFriends();
    }
}
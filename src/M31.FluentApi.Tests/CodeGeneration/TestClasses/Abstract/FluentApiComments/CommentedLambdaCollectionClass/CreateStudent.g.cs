// <auto-generated/>
// This code was generated by the library M31.FluentAPI.
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.

#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
#nullable enable

using System.Collections.Generic;
using System.Linq;
using System;

namespace M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentApiComments.CommentedLambdaCollectionClass;

public class CreateStudent :
    CreateStudent.ICreateStudent,
    CreateStudent.IWithName,
    CreateStudent.IWithPhoneNumbers
{
    private readonly Student student;

    private CreateStudent()
    {
        student = new Student();
    }

    public static ICreateStudent InitialStep()
    {
        return new CreateStudent();
    }

    public static IWithPhoneNumbers WithName(string name)
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.Name = name;
        return createStudent;
    }

    IWithPhoneNumbers IWithName.WithName(string name)
    {
        student.Name = name;
        return this;
    }

    /// <inheritdoc/>
    Student IWithPhoneNumbers.WithPhoneNumbers(System.Collections.Generic.IReadOnlyCollection<M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentApiComments.CommentedLambdaCollectionClass.Phone> phoneNumbers)
    {
        student.PhoneNumbers = phoneNumbers;
        return student;
    }

    /// <inheritdoc/>
    Student IWithPhoneNumbers.WithPhoneNumbers(params M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentApiComments.CommentedLambdaCollectionClass.Phone[] phoneNumbers)
    {
        student.PhoneNumbers = phoneNumbers;
        return student;
    }

    /// <inheritdoc/>
    Student IWithPhoneNumbers.WithPhoneNumbers(params Func<M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentApiComments.CommentedLambdaCollectionClass.CreatePhone.ICreatePhone, M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentApiComments.CommentedLambdaCollectionClass.Phone>[] createPhoneNumbers)
    {
        student.PhoneNumbers = createPhoneNumbers.Select(createPhoneNumber => createPhoneNumber(M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentApiComments.CommentedLambdaCollectionClass.CreatePhone.InitialStep())).ToArray();
        return student;
    }

    /// <inheritdoc/>
    Student IWithPhoneNumbers.WithPhoneNumber(M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentApiComments.CommentedLambdaCollectionClass.Phone phoneNumber)
    {
        student.PhoneNumbers = new M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentApiComments.CommentedLambdaCollectionClass.Phone[1]{ phoneNumber };
        return student;
    }

    /// <inheritdoc/>
    Student IWithPhoneNumbers.WithPhoneNumber(Func<M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentApiComments.CommentedLambdaCollectionClass.CreatePhone.ICreatePhone, M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentApiComments.CommentedLambdaCollectionClass.Phone> createPhoneNumber)
    {
        student.PhoneNumbers = new M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentApiComments.CommentedLambdaCollectionClass.Phone[1]{ createPhoneNumber(M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentApiComments.CommentedLambdaCollectionClass.CreatePhone.InitialStep()) };
        return student;
    }

    /// <inheritdoc/>
    Student IWithPhoneNumbers.WithZeroPhoneNumbers()
    {
        student.PhoneNumbers = new M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentApiComments.CommentedLambdaCollectionClass.Phone[0];
        return student;
    }

    public interface ICreateStudent : IWithName
    {
    }

    public interface IWithName
    {
        IWithPhoneNumbers WithName(string name);
    }

    public interface IWithPhoneNumbers
    {
        /// <summary>Sets the student's phone numbers.</summary>
        /// <param name="phoneNumbers">The student's phone numbers.</param>
        Student WithPhoneNumbers(System.Collections.Generic.IReadOnlyCollection<M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentApiComments.CommentedLambdaCollectionClass.Phone> phoneNumbers);

        /// <summary>Sets the student's phone numbers.</summary>
        /// <param name="phoneNumbers">The student's phone numbers.</param>
        Student WithPhoneNumbers(params M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentApiComments.CommentedLambdaCollectionClass.Phone[] phoneNumbers);

        /// <summary>Sets the student's phone numbers.</summary>
        /// <param name="createPhoneNumbers">Functions for creating the student's phone numbers.</param>
        Student WithPhoneNumbers(params Func<M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentApiComments.CommentedLambdaCollectionClass.CreatePhone.ICreatePhone, M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentApiComments.CommentedLambdaCollectionClass.Phone>[] createPhoneNumbers);

        /// <summary>Sets the student's phone number.</summary>
        /// <param name="phoneNumber">The student's phone number.</param>
        Student WithPhoneNumber(M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentApiComments.CommentedLambdaCollectionClass.Phone phoneNumber);

        /// <summary>Sets the student's phone number.</summary>
        /// <param name="createPhoneNumber">A function for creating the student's phone number.</param>
        Student WithPhoneNumber(Func<M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentApiComments.CommentedLambdaCollectionClass.CreatePhone.ICreatePhone, M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentApiComments.CommentedLambdaCollectionClass.Phone> createPhoneNumber);

        /// <summary>Specifies that the student has no phone numbers.</summary>
        Student WithZeroPhoneNumbers();
    }
}
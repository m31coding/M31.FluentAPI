// <auto-generated/>
// This code was generated by the library M31.FluentAPI.
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.

#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
#nullable enable

using System.Collections;
using M31.FluentApi.Attributes;
using System.Collections.Generic;

namespace M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.NonGenericCollectionMemberClass;

public class CreateStudent : CreateStudent.IWithPets, CreateStudent.IWithBackpackContent
{
    private readonly Student student;

    private CreateStudent()
    {
        student = new Student();
    }

    public static IWithPets WhoseFriendsAre(System.Collections.IEnumerable friends)
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.Friends = friends;
        return createStudent;
    }

    public static IWithPets WhoseFriendsAre(params object[] friends)
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.Friends = friends;
        return createStudent;
    }

    public static IWithPets WhoseFriendIs(object friend)
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.Friends = new object[1]{ friend };
        return createStudent;
    }

    public static IWithPets WhoHasNoFriends()
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.Friends = new object[0];
        return createStudent;
    }

    public IWithBackpackContent WithPets(System.Collections.IList pets)
    {
        student.Pets = pets;
        return this;
    }

    public IWithBackpackContent WithPets(params object[] pets)
    {
        student.Pets = new List<object>(pets);
        return this;
    }

    public IWithBackpackContent WithPet(object pet)
    {
        student.Pets = new List<object>(1){ pet };
        return this;
    }

    public IWithBackpackContent WithZeroPets()
    {
        student.Pets = new List<object>(0);
        return this;
    }

    public Student WithBackpackContent(System.Collections.ICollection backpackContent)
    {
        student.BackpackContent = backpackContent;
        return student;
    }

    public Student WithBackpackContent(params object[] backpackContent)
    {
        student.BackpackContent = new List<object>(backpackContent);
        return student;
    }

    public Student WithBackpackContent(object backpackContent)
    {
        student.BackpackContent = new List<object>(1){ backpackContent };
        return student;
    }

    public Student WithNoBackpackContent()
    {
        student.BackpackContent = new List<object>(0);
        return student;
    }

    public interface IWithPets
    {
        IWithBackpackContent WithPets(System.Collections.IList pets);
        IWithBackpackContent WithPets(params object[] pets);
        IWithBackpackContent WithPet(object pet);
        IWithBackpackContent WithZeroPets();
    }

    public interface IWithBackpackContent
    {
        Student WithBackpackContent(System.Collections.ICollection backpackContent);
        Student WithBackpackContent(params object[] backpackContent);
        Student WithBackpackContent(object backpackContent);
        Student WithNoBackpackContent();
    }
}
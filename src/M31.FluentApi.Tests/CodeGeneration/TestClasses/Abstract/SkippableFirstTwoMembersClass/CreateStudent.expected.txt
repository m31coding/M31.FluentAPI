// <auto-generated/>
// This code was generated by the library M31.FluentAPI.
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.

#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
#nullable enable

using M31.FluentApi.Attributes;

namespace M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.SkippableFirstTwoMembersClass;

public class CreateStudent :
    CreateStudent.ICreateStudent,
    CreateStudent.IWithFirstName,
    CreateStudent.IWithMiddleName,
    CreateStudent.IWithLastName
{
    private readonly Student student;

    private CreateStudent()
    {
        student = new Student();
    }

    public static ICreateStudent InitialStep()
    {
        return new CreateStudent();
    }

    public static IWithMiddleName WithFirstName(string? firstName)
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.FirstName = firstName;
        return createStudent;
    }

    public static IWithLastName WithMiddleName(string? middleName)
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.MiddleName = middleName;
        return createStudent;
    }

    public static Student WithLastName(string lastName)
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.LastName = lastName;
        return createStudent.student;
    }

    IWithMiddleName IWithFirstName.WithFirstName(string? firstName)
    {
        student.FirstName = firstName;
        return this;
    }

    IWithLastName IWithMiddleName.WithMiddleName(string? middleName)
    {
        student.MiddleName = middleName;
        return this;
    }

    Student IWithLastName.WithLastName(string lastName)
    {
        student.LastName = lastName;
        return student;
    }

    public interface ICreateStudent : IWithFirstName
    {
    }

    public interface IWithFirstName : IWithMiddleName
    {
        IWithMiddleName WithFirstName(string? firstName);
    }

    public interface IWithMiddleName : IWithLastName
    {
        IWithLastName WithMiddleName(string? middleName);
    }

    public interface IWithLastName
    {
        Student WithLastName(string lastName);
    }
}
// <auto-generated/>
// This code was generated by the library M31.FluentAPI.
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.

#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
#nullable enable

using M31.FluentApi.Attributes;
using System;
using System.Reflection;

namespace M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.OverloadedMethodClass;

public class CreateStudent
{
    private readonly Student student;
    private static readonly MethodInfo namedMethodInfo;
    private static readonly MethodInfo namedMethodInfo2;

    static CreateStudent()
    {
        namedMethodInfo = typeof(Student).GetMethod(
            "Named",
            BindingFlags.Instance | BindingFlags.NonPublic,
            new Type[] { typeof(string), typeof(string) })!;
        namedMethodInfo2 = typeof(Student).GetMethod(
            "Named",
            BindingFlags.Instance | BindingFlags.NonPublic,
            new Type[] { typeof(string) })!;
    }

    private CreateStudent()
    {
        student = new Student();
    }

    public static Student Named(string firstName, string lastName)
    {
        CreateStudent createStudent = new CreateStudent();
        namedMethodInfo.Invoke(createStudent.student, new object?[] { firstName, lastName });
        return createStudent.student;
    }

    public static Student Named(string lastName)
    {
        CreateStudent createStudent = new CreateStudent();
        namedMethodInfo2.Invoke(createStudent.student, new object?[] { lastName });
        return createStudent.student;
    }
}
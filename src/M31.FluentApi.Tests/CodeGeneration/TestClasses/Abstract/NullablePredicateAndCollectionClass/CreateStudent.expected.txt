// <auto-generated/>
// This code was generated by the library M31.FluentAPI.
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.

#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
#nullable enable

using System.Collections.Generic;
using M31.FluentApi.Attributes;
using System.Reflection;

namespace M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.NullablePredicateAndCollectionClass;

public class CreateStudent :
    CreateStudent.ICreateStudent,
    CreateStudent.IWhoseFriendsAre,
    CreateStudent.IWhoIsHappy
{
    private readonly Student student;
    private static readonly PropertyInfo isHappyPropertyInfo;

    static CreateStudent()
    {
        isHappyPropertyInfo = typeof(Student).GetProperty("IsHappy", BindingFlags.Instance | BindingFlags.Public)!;
    }

    private CreateStudent()
    {
        student = new Student();
    }

    public static ICreateStudent InitialStep()
    {
        return new CreateStudent();
    }

    public static IWhoIsHappy WhoseFriendsAre(System.Collections.Generic.IReadOnlyCollection<string>? friends)
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.Friends = friends;
        return createStudent;
    }

    public static IWhoIsHappy WhoseFriendsAre(params string[]? friends)
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.Friends = friends;
        return createStudent;
    }

    public static IWhoIsHappy WhoseFriendIs(string friend)
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.Friends = new string[1]{ friend };
        return createStudent;
    }

    public static IWhoIsHappy WhoHasNoFriends()
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.Friends = new string[0];
        return createStudent;
    }

    public static IWhoIsHappy WhoseFriendsAreUnknown()
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.Friends = null;
        return createStudent;
    }

    IWhoIsHappy IWhoseFriendsAre.WhoseFriendsAre(System.Collections.Generic.IReadOnlyCollection<string>? friends)
    {
        student.Friends = friends;
        return this;
    }

    IWhoIsHappy IWhoseFriendsAre.WhoseFriendsAre(params string[]? friends)
    {
        student.Friends = friends;
        return this;
    }

    IWhoIsHappy IWhoseFriendsAre.WhoseFriendIs(string friend)
    {
        student.Friends = new string[1]{ friend };
        return this;
    }

    IWhoIsHappy IWhoseFriendsAre.WhoHasNoFriends()
    {
        student.Friends = new string[0];
        return this;
    }

    IWhoIsHappy IWhoseFriendsAre.WhoseFriendsAreUnknown()
    {
        student.Friends = null;
        return this;
    }

    Student IWhoIsHappy.WhoIsHappy(bool? isHappy)
    {
        CreateStudent.isHappyPropertyInfo.SetValue(student, isHappy);
        return student;
    }

    Student IWhoIsHappy.WhoIsSad()
    {
        CreateStudent.isHappyPropertyInfo.SetValue(student, false);
        return student;
    }

    Student IWhoIsHappy.WithUnknownMood()
    {
        CreateStudent.isHappyPropertyInfo.SetValue(student, null);
        return student;
    }

    public interface ICreateStudent : IWhoseFriendsAre
    {
    }

    public interface IWhoseFriendsAre
    {
        IWhoIsHappy WhoseFriendsAre(System.Collections.Generic.IReadOnlyCollection<string>? friends);

        IWhoIsHappy WhoseFriendsAre(params string[]? friends);

        IWhoIsHappy WhoseFriendIs(string friend);

        IWhoIsHappy WhoHasNoFriends();

        IWhoIsHappy WhoseFriendsAreUnknown();
    }

    public interface IWhoIsHappy
    {
        Student WhoIsHappy(bool? isHappy = true);

        Student WhoIsSad();

        Student WithUnknownMood();
    }
}
// <auto-generated/>
// This code was generated by the library M31.FluentAPI.
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.

#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
#nullable enable

using System;
using M31.FluentApi.Attributes;

namespace M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentMethodDefaultValuesClass;

public class CreateStudent :
    CreateStudent.IWithLastName,
    CreateStudent.IBornOn,
    CreateStudent.IEnrolledIn,
    CreateStudent.IInSemester,
    CreateStudent.IWithNumberOfPassedExams,
    CreateStudent.IWithNumberOfFailedExams
{
    private readonly Student student;

    private CreateStudent()
    {
        student = new Student();
    }

    public static IWithLastName WithFirstName(string firstName = "Alice")
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.WithFirstName(firstName);
        return createStudent;
    }

    public IBornOn WithLastName(string? lastName = null)
    {
        student.WithLastName(lastName);
        return this;
    }

    public IEnrolledIn BornOn(System.DateOnly date = default)
    {
        student.BornOn(date);
        return this;
    }

    public IInSemester EnrolledIn(System.DateOnly date = default)
    {
        student.EnrolledIn(date);
        return this;
    }

    public IWithNumberOfPassedExams InSemester(int semester = 3)
    {
        student.InSemester(semester);
        return this;
    }

    public IWithNumberOfFailedExams WithNumberOfPassedExams(int? numberOfPassedExams = default)
    {
        student.WithNumberOfPassedExams(numberOfPassedExams);
        return this;
    }

    public Student WithNumberOfFailedExams(int? numberOfFailedExams = default)
    {
        student.WithNumberOfFailedExams(numberOfFailedExams);
        return student;
    }

    public interface IWithLastName
    {
        IBornOn WithLastName(string? lastName = null);
    }

    public interface IBornOn
    {
        IEnrolledIn BornOn(System.DateOnly date = default);
    }

    public interface IEnrolledIn
    {
        IInSemester EnrolledIn(System.DateOnly date = default);
    }

    public interface IInSemester
    {
        IWithNumberOfPassedExams InSemester(int semester = 3);
    }

    public interface IWithNumberOfPassedExams
    {
        IWithNumberOfFailedExams WithNumberOfPassedExams(int? numberOfPassedExams = default);
    }

    public interface IWithNumberOfFailedExams
    {
        Student WithNumberOfFailedExams(int? numberOfFailedExams = default);
    }
}
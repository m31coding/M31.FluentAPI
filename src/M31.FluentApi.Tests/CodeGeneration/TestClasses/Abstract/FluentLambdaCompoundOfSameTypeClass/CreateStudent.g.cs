// <auto-generated/>
// This code was generated by the library M31.FluentAPI.
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.

#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
#nullable enable

using M31.FluentApi.Attributes;
using System;

namespace M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentLambdaCompoundOfSameTypeClass;

public class CreateStudent :
    CreateStudent.ICreateStudent,
    CreateStudent.IWithName,
    CreateStudent.IWithDetails
{
    private readonly Student student;

    private CreateStudent()
    {
        student = new Student();
    }

    public static ICreateStudent InitialStep()
    {
        return new CreateStudent();
    }

    public static IWithDetails WithName(string name)
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.Name = name;
        return createStudent;
    }

    IWithDetails IWithName.WithName(string name)
    {
        student.Name = name;
        return this;
    }

    Student IWithDetails.WithDetails(M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentLambdaCompoundOfSameTypeClass.Address address1, M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentLambdaCompoundOfSameTypeClass.Address address2)
    {
        student.Address1 = address1;
        student.Address2 = address2;
        return student;
    }

    Student IWithDetails.WithDetails(Func<M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentLambdaCompoundOfSameTypeClass.CreateAddress.ICreateAddress, M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentLambdaCompoundOfSameTypeClass.Address> createAddress1, Func<M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentLambdaCompoundOfSameTypeClass.CreateAddress.ICreateAddress, M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentLambdaCompoundOfSameTypeClass.Address> createAddress2)
    {
        student.Address1 = createAddress1(M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentLambdaCompoundOfSameTypeClass.CreateAddress.InitialStep());
        student.Address2 = createAddress2(M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentLambdaCompoundOfSameTypeClass.CreateAddress.InitialStep());
        return student;
    }

    public interface ICreateStudent : IWithName
    {
    }

    public interface IWithName
    {
        IWithDetails WithName(string name);
    }

    public interface IWithDetails
    {
        Student WithDetails(M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentLambdaCompoundOfSameTypeClass.Address address1, M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentLambdaCompoundOfSameTypeClass.Address address2);

        Student WithDetails(Func<M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentLambdaCompoundOfSameTypeClass.CreateAddress.ICreateAddress, M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentLambdaCompoundOfSameTypeClass.Address> createAddress1, Func<M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentLambdaCompoundOfSameTypeClass.CreateAddress.ICreateAddress, M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentLambdaCompoundOfSameTypeClass.Address> createAddress2);
    }
}
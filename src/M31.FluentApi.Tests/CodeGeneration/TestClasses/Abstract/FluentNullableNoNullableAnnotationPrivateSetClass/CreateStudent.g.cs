// <auto-generated/>
// This code was generated by the library M31.FluentAPI.
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.

#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
#nullable enable

using M31.FluentApi.Attributes;
using System.Reflection;

namespace M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.FluentNullableNoNullableAnnotationPrivateSetClass;

public class CreateStudent :
    CreateStudent.ICreateStudent,
    CreateStudent.IWithName
{
    private readonly Student student;
    private static readonly PropertyInfo namePropertyInfo;

    static CreateStudent()
    {
        namePropertyInfo = typeof(Student).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public)!;
    }

    private CreateStudent()
    {
        student = new Student();
    }

    public static ICreateStudent InitialStep()
    {
        return new CreateStudent();
    }

    public static Student WithName(string name)
    {
        CreateStudent createStudent = new CreateStudent();
        CreateStudent.namePropertyInfo.SetValue(createStudent.student, name);
        return createStudent.student;
    }

    Student IWithName.WithName(string name)
    {
        CreateStudent.namePropertyInfo.SetValue(student, name);
        return student;
    }

    public static Student WhoseNameIsUnknown()
    {
        CreateStudent createStudent = new CreateStudent();
        CreateStudent.namePropertyInfo.SetValue(createStudent.student, null);
        return createStudent.student;
    }

    Student IWithName.WhoseNameIsUnknown()
    {
        CreateStudent.namePropertyInfo.SetValue(student, null);
        return student;
    }

    public interface ICreateStudent : IWithName
    {
    }

    public interface IWithName
    {
        Student WithName(string name);

        Student WhoseNameIsUnknown();
    }
}
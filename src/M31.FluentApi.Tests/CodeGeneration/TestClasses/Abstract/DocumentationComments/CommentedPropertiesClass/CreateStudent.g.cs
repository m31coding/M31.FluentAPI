// <auto-generated/>
// This code was generated by the library M31.FluentAPI.
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.

#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
#nullable enable

namespace M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.DocumentationComments.CommentedPropertiesClass;

public class CreateStudent :
    CreateStudent.ICreateStudent,
    CreateStudent.IWithGivenNameWithFirstName,
    CreateStudent.IWithLastName,
    CreateStudent.IOfAge,
    CreateStudent.IInSemester,
    CreateStudent.ILivingIn
{
    private readonly Student student;

    private CreateStudent()
    {
        student = new Student();
    }

    public static ICreateStudent InitialStep()
    {
        return new CreateStudent();
    }

    public static IWithLastName WithGivenName(string givenName)
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.GivenName = givenName;
        return createStudent;
    }

    /// <summary>Sets the student's first name.</summary>
    /// <param name="firstName">The student's first name.</param>
    public static IWithLastName WithFirstName(string firstName)
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.FirstName = firstName;
        return createStudent;
    }

    IWithLastName IWithGivenNameWithFirstName.WithGivenName(string givenName)
    {
        student.GivenName = givenName;
        return this;
    }

    /// <inheritdoc/>
    IWithLastName IWithGivenNameWithFirstName.WithFirstName(string firstName)
    {
        student.FirstName = firstName;
        return this;
    }

    /// <inheritdoc/>
    IOfAge IWithLastName.WithLastName(string lastName)
    {
        student.LastName = lastName;
        return this;
    }

    /// <inheritdoc/>
    IInSemester IOfAge.OfAge(int age)
    {
        student.Age = age;
        return this;
    }

    /// <inheritdoc/>
    ILivingIn IInSemester.InSemester(int semester)
    {
        student.Semester = semester;
        return this;
    }

    Student ILivingIn.LivingIn(string city)
    {
        student.City = city;
        return student;
    }

    public interface ICreateStudent : IWithGivenNameWithFirstName
    {
    }

    public interface IWithGivenNameWithFirstName
    {
        IWithLastName WithGivenName(string givenName);

        /// <summary>Sets the student's first name.</summary>
        /// <param name="firstName">The student's first name.</param>
        IWithLastName WithFirstName(string firstName);
    }

    public interface IWithLastName
    {
        /// <summary>Sets the student's last name.</summary>
        /// <param name="lastName">The student's last name.</param>
        IOfAge WithLastName(string lastName);
    }

    public interface IOfAge
    {
        /// <summary>Sets the student's age.</summary>
        /// <param name="age">The student's age.</param>
        IInSemester OfAge(int age);
    }

    public interface IInSemester
    {
        /// <summary>Sets the student's semester.</summary>
        /// <param name="semester">The student's semester.</param>
        ILivingIn InSemester(int semester);
    }

    public interface ILivingIn
    {
        Student LivingIn(string city);
    }
}
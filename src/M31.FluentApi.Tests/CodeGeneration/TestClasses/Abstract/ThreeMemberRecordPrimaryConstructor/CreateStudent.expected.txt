// <auto-generated/>
// This code was generated by the library M31.FluentAPI.
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.

#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
#nullable enable

using System;
using System.Reflection.Metadata;
using M31.FluentApi.Attributes;
using System.Reflection;

namespace M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.ThreeMemberRecordPrimaryConstructor;

public class CreateStudent :
    CreateStudent.ICreateStudent,
    CreateStudent.IWithName,
    CreateStudent.IBornOn,
    CreateStudent.IInSemester
{
    private readonly Student student;
    private static readonly PropertyInfo namePropertyInfo;
    private static readonly PropertyInfo dateOfBirthPropertyInfo;
    private static readonly PropertyInfo semesterPropertyInfo;

    static CreateStudent()
    {
        namePropertyInfo = typeof(Student).GetProperty("name", BindingFlags.Instance | BindingFlags.Public)!;
        dateOfBirthPropertyInfo = typeof(Student).GetProperty("dateOfBirth", BindingFlags.Instance | BindingFlags.Public)!;
        semesterPropertyInfo = typeof(Student).GetProperty("semester", BindingFlags.Instance | BindingFlags.Public)!;
    }

    private CreateStudent()
    {
        student = new Student(default!, default!, default!);
    }

    public static ICreateStudent InitialStep()
    {
        return new CreateStudent();
    }

    public static IBornOn WithName(string name)
    {
        CreateStudent createStudent = new CreateStudent();
        CreateStudent.namePropertyInfo.SetValue(createStudent.student, name);
        return createStudent;
    }

    IBornOn IWithName.WithName(string name)
    {
        CreateStudent.namePropertyInfo.SetValue(student, name);
        return this;
    }

    IInSemester IBornOn.BornOn(System.DateOnly dateOfBirth)
    {
        CreateStudent.dateOfBirthPropertyInfo.SetValue(student, dateOfBirth);
        return this;
    }

    Student IInSemester.InSemester(int semester)
    {
        CreateStudent.semesterPropertyInfo.SetValue(student, semester);
        return student;
    }

    public interface ICreateStudent : IWithName
    {
    }

    public interface IWithName
    {
        IBornOn WithName(string name);
    }

    public interface IBornOn
    {
        IInSemester BornOn(System.DateOnly dateOfBirth);
    }

    public interface IInSemester
    {
        Student InSemester(int semester);
    }
}
// <auto-generated/>
// This code was generated by the library M31.FluentAPI.
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.

#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
#nullable enable

using M31.FluentApi.Attributes;

namespace M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.SkippableTwoLoopsClass;

public class CreateStudent :
    CreateStudent.ICreateStudent,
    CreateStudent.IWithMember0,
    CreateStudent.IWithMember1WithMember1B,
    CreateStudent.IWithMember0WithMember1WithMember1B,
    CreateStudent.IWithMember2,
    CreateStudent.IWithMember3,
    CreateStudent.IWithMember4WithMember4B,
    CreateStudent.IWithMember3WithMember4WithMember4B,
    CreateStudent.IWithMember5
{
    private readonly Student student;

    private CreateStudent()
    {
        student = new Student();
    }

    public static ICreateStudent InitialStep()
    {
        return new CreateStudent();
    }

    public static IWithMember1WithMember1B WithMember0(string? member0)
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.Member0 = member0;
        return createStudent;
    }

    public static IWithMember0 WithMember1(string? member1)
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.Member1 = member1;
        return createStudent;
    }

    public static IWithMember2 WithMember1B(string? member1B)
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.Member1B = member1B;
        return createStudent;
    }

    IWithMember1WithMember1B IWithMember0WithMember1WithMember1B.WithMember0(string? member0)
    {
        student.Member0 = member0;
        return this;
    }

    IWithMember0 IWithMember0WithMember1WithMember1B.WithMember1(string? member1)
    {
        student.Member1 = member1;
        return this;
    }

    IWithMember2 IWithMember0WithMember1WithMember1B.WithMember1B(string? member1B)
    {
        student.Member1B = member1B;
        return this;
    }

    IWithMember3 IWithMember2.WithMember2(string? member2)
    {
        student.Member2 = member2;
        return this;
    }

    IWithMember4WithMember4B IWithMember3WithMember4WithMember4B.WithMember3(string? member3)
    {
        student.Member3 = member3;
        return this;
    }

    IWithMember3 IWithMember3WithMember4WithMember4B.WithMember4(string? member4)
    {
        student.Member4 = member4;
        return this;
    }

    IWithMember5 IWithMember3WithMember4WithMember4B.WithMember4B(string? member4B)
    {
        student.Member4B = member4B;
        return this;
    }

    Student IWithMember5.WithMember5(string? member5)
    {
        student.Member5 = member5;
        return student;
    }

    public interface ICreateStudent : IWithMember0
    {
    }

    public interface IWithMember0 : IWithMember0WithMember1WithMember1B
    {
    }

    public interface IWithMember1WithMember1B : IWithMember0WithMember1WithMember1B
    {
    }

    public interface IWithMember0WithMember1WithMember1B
    {
        IWithMember1WithMember1B WithMember0(string? member0);

        IWithMember0 WithMember1(string? member1);

        IWithMember2 WithMember1B(string? member1B);
    }

    public interface IWithMember2
    {
        IWithMember3 WithMember2(string? member2);
    }

    public interface IWithMember3 : IWithMember3WithMember4WithMember4B
    {
    }

    public interface IWithMember4WithMember4B : IWithMember3WithMember4WithMember4B
    {
    }

    public interface IWithMember3WithMember4WithMember4B
    {
        IWithMember4WithMember4B WithMember3(string? member3);

        IWithMember3 WithMember4(string? member4);

        IWithMember5 WithMember4B(string? member4B);
    }

    public interface IWithMember5
    {
        Student WithMember5(string? member5);
    }
}
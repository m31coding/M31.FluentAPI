// <auto-generated/>
// This code was generated by the library M31.FluentAPI.
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.

#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
#nullable enable

using M31.FluentApi.Attributes;
using MyList = System.Collections.Generic.IList<string>;
using System.Collections.Generic;

namespace M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.AliasNamespaceClass;

public class CreateStudent :
    CreateStudent.ICreateStudent,
    CreateStudent.IWhoseFriendsAre
{
    private readonly Student student;

    private CreateStudent()
    {
        student = new Student();
    }

    public static ICreateStudent InitialStep()
    {
        return new CreateStudent();
    }

    public static Student WhoseFriendsAre(System.Collections.Generic.IList<string> friends)
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.Friends = friends;
        return createStudent.student;
    }

    public static Student WhoseFriendsAre(params string[] friends)
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.Friends = new List<string>(friends);
        return createStudent.student;
    }

    public static Student WhoseFriendIs(string friend)
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.Friends = new List<string>(1){ friend };
        return createStudent.student;
    }

    public static Student WhoHasNoFriends()
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.Friends = new List<string>(0);
        return createStudent.student;
    }

    Student IWhoseFriendsAre.WhoseFriendsAre(System.Collections.Generic.IList<string> friends)
    {
        student.Friends = friends;
        return student;
    }

    Student IWhoseFriendsAre.WhoseFriendsAre(params string[] friends)
    {
        student.Friends = new List<string>(friends);
        return student;
    }

    Student IWhoseFriendsAre.WhoseFriendIs(string friend)
    {
        student.Friends = new List<string>(1){ friend };
        return student;
    }

    Student IWhoseFriendsAre.WhoHasNoFriends()
    {
        student.Friends = new List<string>(0);
        return student;
    }

    public interface ICreateStudent : IWhoseFriendsAre
    {
    }

    public interface IWhoseFriendsAre
    {
        Student WhoseFriendsAre(System.Collections.Generic.IList<string> friends);

        Student WhoseFriendsAre(params string[] friends);

        Student WhoseFriendIs(string friend);

        Student WhoHasNoFriends();
    }
}
// <auto-generated/>
// This code was generated by the library M31.FluentAPI.
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.

#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
#nullable enable

using M31.FluentApi.Attributes;

namespace M31.FluentApi.Tests.CodeGeneration.TestClasses.Abstract.ContinueWithInForkClass;

public class CreateStudent :
    CreateStudent.ICreateStudent,
    CreateStudent.IWithMember1,
    CreateStudent.IWithMember2AWithMember2B,
    CreateStudent.IWithMember3,
    CreateStudent.IWithMember4
{
    private readonly Student student;

    private CreateStudent()
    {
        student = new Student();
    }

    public static ICreateStudent InitialStep()
    {
        return new CreateStudent();
    }

    public static IWithMember2AWithMember2B WithMember1(string member1)
    {
        CreateStudent createStudent = new CreateStudent();
        createStudent.student.Member1 = member1;
        return createStudent;
    }

    IWithMember2AWithMember2B IWithMember1.WithMember1(string member1)
    {
        student.Member1 = member1;
        return this;
    }

    IWithMember3 IWithMember2AWithMember2B.WithMember2A(string? member2A)
    {
        student.Member2A = member2A;
        return this;
    }

    IWithMember4 IWithMember2AWithMember2B.WithMember2B(string? member2B)
    {
        student.Member2B = member2B;
        return this;
    }

    IWithMember4 IWithMember3.WithMember3(string? member3)
    {
        student.Member3 = member3;
        return this;
    }

    Student IWithMember4.WithMember4(string member4)
    {
        student.Member4 = member4;
        return student;
    }

    public interface ICreateStudent : IWithMember1
    {
    }

    public interface IWithMember1
    {
        IWithMember2AWithMember2B WithMember1(string member1);
    }

    public interface IWithMember2AWithMember2B
    {
        IWithMember3 WithMember2A(string? member2A);

        IWithMember4 WithMember2B(string? member2B);
    }

    public interface IWithMember3
    {
        IWithMember4 WithMember3(string? member3);
    }

    public interface IWithMember4
    {
        Student WithMember4(string member4);
    }
}